(defvar eww "/usr/bin/eww --config ~/.config/eww/bar")
(defvar power false)
(defvar bright false)
(defvar volum false)

(deflisten workspaces :initial "[]" "bash ~/.config/eww/bar/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/bar/scripts/get-active-workspace")

(defpoll hour               :interval "1s" "date '+%H'")
(defpoll min                :interval "1s" "date '+%M'")
(defpoll battery-icon       :interval "1s" "scripts/battery icon")
(defpoll battery-capacity   :interval "1s" "scripts/battery percent")
(defpoll wifi-icon          :interval "1s" "scripts/wifi icon")
(defpoll wifi-name          :interval "1s" "scripts/wifi name")
(defpoll current-brightness :interval "1s" "brightnessctl -m | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")

(defwidget launcher []
    (box :space-evenly "false"
         :orientation "v"
         (button :class "launcher-btn ${current_workspace}"
                 "")
    )
)

(defwidget workspaces []
    (box :space-evenly true
         :orientation "v"
         :spacing "5"
         :class "workspaces"
         (for workspace in workspaces
            (button :onclick "hyprctl dispatch workspace ${workspace.id}"
                    :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "primed" : ""}"
                    "")
         )
    )
)

(defwidget top []
    (box :orientation "v"
         :space-evenly "false"
         :valign "start"
(launcher)
(workspaces)))

(defwidget time []
	(box :orientation "v" 
		 :class "clock" 
		 :valign "end"
	     (button :onclick "scripts/popup calendar"	
	        	 :class "time-hour" hour)
	     (button :onclick "scripts/popup calendar"	
	        	 :class "time-min"  min)
    )
)

(defwidget power []
	(eventbox :onhover "${eww} update power=true"
			  :onhoverlost "${eww} update power=false"
	          (box :orientation "v"
	          	   :space-evenly "false"
	          	   :vexpand "false"
	          	   :class "power-menu"
                   (revealer :transition "slideup"
	               			 :reveal power
	               			 :duration "550ms"
                             (box :orientation "v"
	                         	  :space-evenly "false"
                                  :class "power-menu-options"
	                              (button :class "logout"
	                              		  :tooltip "Logout"
	                              		  :onclick "scripts/system logout" "")
	                              (button :class "lock"
	                                	  :tooltip "Lock Screen"
	                                	  :onclick "scripts/system lock" "")
  	                              (button :class "suspend"
	                                	  :tooltip "Suspend"
	                              		  :onclick "scripts/system suspend" "")
  	                              (button :class "reboot"
	                                	  :tooltip "Reboot"
	                              		  :onclick "reboot" "")
	                              (button :class "shutdown"
	                              		  :tooltip "Shutdown"
	                              		  :onclick "shutdown now" "")
                                 
                             )
                   )
	               (button :class "power-options"
	               		   :tooltip "Power Options"
	               		   "􏁭")
              )
    )
)

(defwidget wifi []
    (box :orientation "v"  
         :space-evenly false
         (label :class "wifi"
            :text wifi-icon
            :tooltip wifi-name)
    )
)

(defwidget battery []
    (box :orientation "v"    
         :visible {battery-capacity != "" ? true : false }
         :space-evenly false
         (label :class "battery"        
                :text battery-icon
                :tooltip "${battery-capacity}%")
    )
)

(defwidget volume []
	(eventbox :onhover "${eww} update volum=true" 		
			  :onhoverlost "${eww} update volum=false"
	(box      :orientation "v" 	  
			  :space-evenly "false" 
			  :spacing "2"
	(revealer :transition "slideup" 
			  :reveal volum         
			  :duration "550ms"
	(scale    :class "slider" 	  
			  :value current-volume 
			  :orientation "v"      
			  :flipped true 
			  :tooltip "Volume: ${current-volume}%" 
			  :max 101 
			  :min 0 
			  :onchange "amixer -D pulse sset Master {}%" ))
	(label    :class "volume"
              :text ""))
))

(defwidget brightness []
  (eventbox :onhover "${eww} update bright=true"   
  			:onhoverlost "${eww} update bright=false"
  			(box    :orientation "v"  
			  		:space-evenly false
					:spacing 2
					:class "brightness"
                    :visible {battery-capacity != "" ? true : false }
  			(revealer :transition "slideup" 
			  		  :reveal bright   
					  :duration "550ms"
  			(scale :class "slider" 
			  	   :value current-brightness 
				   :tooltip "Brightness: ${current-brightness}%" 
				   :onchange "brightnessctl set {}%" 
				   :orientation "v" 
				   :flipped true 
				   :max 101 
				   :min 0))
  			(label :text ""))))

(defwidget bottom []
	(box :orientation "v"
		 :space-evenly false
         :valign "end"
(wifi)
(brightness)
(volume)
(battery)
(time)
(power)))


(defwidget bar []
	(box :class "eww-bar"
	     :orientation "v"
(top)
(bottom)))

(defwindow bar
	:geometry (geometry :x "10"
			            :y "0"
			            :height "100%"
			            :width "40px"
			            :anchor "left center")
	:monitor 0
	:exclusive "true"
(bar))
